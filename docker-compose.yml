version: '3.8' # Versi Docker Compose yang digunakan
name: "UASP_AKSO_2024" # Nama proyek Compose, digunakan untuk menamai container dan network

services:
  nginx: # Service untuk NGINX sebagai web server
    image: nginx:latest
    container_name: nginx_server
    ports:
      - "8080:80"
    volumes:
      - ./nginx/html:/usr/share/nginx/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - webnet
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf

  mysql: # Service untuk MySQL sebagai database server
    image: mysql:latest
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpwd
      MYSQL_DATABASE: sample_db
      MYSQL_USER: user
      MYSQL_PASSWORD: user123
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - dbnet

  adminer: # Service untuk Adminer sebagai GUI database
    image: adminer:latest
    container_name: adminer_ui
    ports:
      - "8081:8080"
    networks:
      - dbnet

  redis: # Service untuk Redis sebagai message queue
    image: redis:latest
    container_name: redis_server
    ports:
      - "6379:6379"
    networks:
      - mqnet

  rabbitmq: # Service untuk RabbitMQ sebagai message broker
    image: rabbitmq:3-management
    container_name: rabbitmq_server
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: rabbituser
      RABBITMQ_DEFAULT_PASS: rabbitpwd
    networks:
      - mqnet

  prometheus: # Service untuk Prometheus sebagai monitoring system
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/etc/prometheus
    networks:
      - monitornet

  grafana: # Service untuk Grafana sebagai dashboard visualisasi
    image: grafana/grafana:latest
    container_name: grafana_dashboard
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=user
      - GF_SECURITY_ADMIN_PASSWORD=user123
    networks:
      - monitornet

  worker: # Service untuk worker berbasis Python
    image: python:3.11-slim
    container_name: background_worker
    ports:
      - "8000:8000"
    command: python  /app/worker.py
    volumes:
      - .:/app
    networks:
      - webnet

networks:
  webnet:
    driver: bridge
  dbnet:
    driver: bridge
  mqnet:
    driver: bridge
  monitornet:
    driver: bridge

volumes:
  web_content:
    driver: local
  mysql_data:
    driver: local
  prometheus_data:
    driver: local

configs:
  nginx_config: # Config untuk NGINX
    file: ./nginx/default.conf

